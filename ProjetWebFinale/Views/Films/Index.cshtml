@using Microsoft.AspNetCore.Identity
@model IEnumerable<ProjetWebFinale.Models.Films>
@inject UserManager<Utilisateurs> _userManager

@{
    ViewData["Title"] = "Liste des films";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>Liste des films</h1>

<p>
    <a asp-action="Create">Ajouter un DVD</a>
</p>

<div>
    <span>Page: </span>
    @{
        int nbFilms = Context.Request.Query["nbFilms"].Count > 0 ? int.Parse(Context.Request.Query["nbFilms"][0]) : 12;
        int nbPages = (int)Math.Ceiling((double)Model.Count() / nbFilms);
        int noPage = Context.Request.Query["noPage"].Count > 0 ? int.Parse(Context.Request.Query["noPage"][0]) : 1;

        for (var i = 1; i <= nbPages; i++)
        {
            if (i == noPage)
            {
                <input type="button" value="@i" onclick="page(@i)" class="sSelected">
            }
            else
            {
                <input type="button" value="@i" onclick="page(@i)" class="sNonSelected">
            }
    }

    string searchString = Context.Request.Query["SearchString"];
}
</div>
<div>
    <span>Nombre de films par page: </span>
    @{

        for (var i = 4; i <= 32; i+=4)
        {
            if (nbFilms == i)
            {
                <input type="button" value="@i" onclick="nbFilms(@i)" class="sSelected">
            }
            else
            {
                <input type="button" value="@i" onclick="nbFilms(@i)" class="sNonSelected">
            }
        }
    }
</div>
<div>
    <span>Tri: </span>
    @{
    }
</div>

<form asp-controller="Films" asp-action="Index" method="get">
    <p>
        Recherche par titre: <input type="text" name="SearchString" />
        <input type="submit" value="Rechercher" />
        @if (!String.IsNullOrEmpty(searchString))
        {
            <a href="/Films" class="btn btn-primary">Effacer la recherche</a>
        }
    </p>
</form>

<div class="d-flex flex-wrap align-content-start bg-light" style="height:1000px">
    @{
        var index = 0;
    }
    @foreach (var item in Model.Skip((noPage - 1) * nbFilms).Take(nbFilms))
    {
        index++; 
        var user = await _userManager.GetUserAsync(User);

        <div class="card" style="width:300px; margin: 5px;">
            <img src="~/liste-vignettes/@(item.Id).jpg" alt="./liste-vignettes/@(item.Id).jpg" width="300" height="442"/>
            <div class="card-body">
                <p class="card-text"> 
                    <b>Titre :</b> 
                    @Html.DisplayFor(modelItem => item.TitreFrancais)
                </p>
                <p class="card-text"> 
                    <b>Utilisateur qui possède l'article :</b> <br>
                    <a href="/FilmsUtilisateurs/Index?name=@item.UtilisateurProprietaire.NomUtilisateur">@Html.DisplayFor(modelItem => item.UtilisateurProprietaire.NomUtilisateur)</a>
                </p>
                <div>    
                    @if (user != null && user.Id == item.NoUtilisateurProprietaire)
                    {
                        <a class="btn btn-primary btn-custom" asp-action="Edit" asp-route-id="@item.Id">Modifier </a> 
                        <a> | </a>
                        <a class="btn btn-success btn-custom" asp-action="Details" asp-route-id="@item.Id">Details </a> 
                        <a> | </a>
                        <a class="btn btn-danger btn-custom" asp-action="Delete" asp-route-id="@item.Id">Supprimer</a>
                    }
                    else
                    {
                        <a class="btn btn-success btn-custom" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    }                   
                </div>
            </div>
        </div>
    }

</div>

<script>
    function page(page) {
        location.href = '?noPage=' + page + '&nbFilms=' + @nbFilms;
    }

    function nbFilms(nb) {
        location.href = '?noPage=' + @noPage + '&nbFilms=' + nb;
    }
</script>